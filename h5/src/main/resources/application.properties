#注意，在Application.java代码中，配置DataSource时的注解
#@ConfigurationProperties(prefix=“spring.datasource”)
#表示将根据前缀“spring.datasource”从application.properties中匹配相关属性值。

spring.datasource.url=jdbc:mysql://127.0.0.1:3306/chao?useUnicode=true&characterEncoding=gbk&zeroDateTimeBehavior=convertToNull
spring.datasource.username=root
spring.datasource.password=670980756
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.rabbitmq.addresses=127.0.0.1

spring.redis.server=127.0.0.1
spring.redis.port = 6379
spring.redis.timeout = 2000
spring.redis.pwd = 670980756
spring.redis.database = 0
#缓存失效时间（缓存10分钟）
spring.redis.expiration = 600

server.context-path=/h5


#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
## 下面为连接池的补充设置，应用到上面所有数据源中
## 初始化大小，最小，最大
#spring.datasource.initialSize=5
#spring.datasource.minIdle=5
#spring.datasource.maxActive=20
## 配置获取连接等待超时的时间
#spring.datasource.maxWait=60000
## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#spring.datasource.timeBetweenEvictionRunsMillis=60000
## 配置一个连接在池中最小生存的时间，单位是毫秒
#spring.datasource.minEvictableIdleTimeMillis=300000
#spring.datasource.validationQuery=SELECT 1 FROM DUAL
#spring.datasource.testWhileIdle=true
#spring.datasource.testOnBorrow=false
#spring.datasource.testOnReturn=false
## 打开PSCache，并且指定每个连接上PSCache的大小
#spring.datasource.poolPreparedStatements=true
#spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
## 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
## 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
## 合并多个DruidDataSource的监控数据
##spring.datasource.useGlobalDataSourceStat=true

